{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication.service.ts","./src/app/booklist/book.ts","./src/app/booklist/booklist.component.ts","./src/app/booklist/booklist.component.html","./src/app/booklist/booklist-entry-update-dialog.html","./src/app/booklist/booklist-entry-delete-dialog.html","./src/app/books.service.ts","./src/app/friends/friends.component.ts","./src/app/friends/friends.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/stats.service.ts","./src/app/timeline/timeline.component.ts","./src/app/timeline/timeline.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nconst materialModules = [\r\n  CdkTreeModule,\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatProgressSpinnerModule,\r\n  MatPaginatorModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatFormFieldModule,\r\n  MatButtonToggleModule,\r\n  MatTreeModule,\r\n  OverlayModule,\r\n  PortalModule,\r\n  MatBadgeModule,\r\n  MatGridListModule,\r\n  MatRadioModule,\r\n  MatDatepickerModule,\r\n  MatTooltipModule,\r\n  MatNativeDateModule,\r\n  MatDialogModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ...materialModules],\r\n  exports: [...materialModules],\r\n})\r\nexport class AngularMaterialModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { BooklistComponent } from './booklist/booklist.component';\r\nimport { FriendsComponent } from './friends/friends.component';\r\nimport { TimelineComponent } from './timeline/timeline.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'profile', component: ProfileComponent },\r\n  { path: 'my-list', component: BooklistComponent },\r\n  { path: 'friends', component: FriendsComponent },\r\n  { path: 'timeline', component: TimelineComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  constructor(public auth: AuthenticationService) {}\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <mat-toolbar-row>\r\n    <a mat-button style=\"font-size: 2vh\" [routerLink]=\"'/'\">Book Hero</a>\r\n    <div fxShow=\"true\" fxFlex fxLayout>\r\n      <div fxFlex>\r\n        <a mat-button *ngIf=\"!auth.isLoggedIn()\" [routerLink]=\"'/login'\"\r\n          >Log in</a\r\n        >\r\n        <a mat-button *ngIf=\"!auth.isLoggedIn()\" [routerLink]=\"'/register'\"\r\n          >Sign up</a\r\n        >\r\n\r\n        <a mat-button *ngIf=\"auth.isLoggedIn()\" [routerLink]=\"'/my-list'\"\r\n          >My List</a\r\n        >\r\n        <a mat-button *ngIf=\"auth.isLoggedIn()\" [routerLink]=\"'/timeline'\"\r\n          >Timeline</a\r\n        >\r\n        <a mat-button *ngIf=\"auth.isLoggedIn()\" [routerLink]=\"'/friends'\"\r\n          >Friends</a\r\n        >\r\n      </div>\r\n      <div fxFlex fxLayoutAlign=\"flex-end center\">\r\n        <a mat-button *ngIf=\"auth.isLoggedIn()\" [routerLink]=\"'/profile'\"\r\n          >Profile</a\r\n        >\r\n        <a mat-button *ngIf=\"auth.isLoggedIn()\" (click)=\"auth.logout()\"\r\n          >Logout</a\r\n        >\r\n      </div>\r\n    </div>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\n\r\n// Routing\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n// Angular Material\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { NgModule } from '@angular/core';\r\n\r\n// FormsModule\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// Angular Flex Layout\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n// Components\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BooklistComponent } from './booklist/booklist.component';\r\nimport { updateEntryDialog } from './booklist/booklist.component';\r\nimport { deleteEntryVerificationDialog } from './booklist/booklist.component';\nimport { FriendsComponent } from './friends/friends.component';\nimport { TimelineComponent } from './timeline/timeline.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterComponent,\r\n    ProfileComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    BooklistComponent,\r\n    updateEntryDialog,\r\n    deleteEntryVerificationDialog,\r\n    FriendsComponent,\r\n    TimelineComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    FlexLayoutModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport interface UserDetails {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  exp: number;\r\n  iat: number;\r\n}\r\n\r\ninterface TokenResponse {\r\n  token: string;\r\n}\r\n\r\nexport interface TokenPayload {\r\n  email: string;\r\n  password: string;\r\n  name?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n  private token: string;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem('auth-token', token);\r\n    this.token = token;\r\n  }\r\n\r\n  public getToken(): string {\r\n    if (!this.token) {\r\n      this.token = localStorage.getItem('auth-token');\r\n    }\r\n    return this.token;\r\n  }\r\n\r\n  private request(\r\n    method: 'post' | 'get',\r\n    uri: 'auth/login' | 'auth/register' | 'users/me',\r\n    user?: TokenPayload\r\n  ): Observable<any> {\r\n    let base$;\r\n\r\n    if (method === 'post') {\r\n      base$ = this.http.post(`/api/${uri}`, user);\r\n    } else {\r\n      base$ = this.http.get(`/api/${uri}`, {\r\n        headers: { Authorization: `Bearer ${this.getToken()}` },\r\n      });\r\n    }\r\n\r\n    const request = base$.pipe(\r\n      map((data: TokenResponse) => {\r\n        if (data.token) {\r\n          this.saveToken(data.token);\r\n        }\r\n        return data;\r\n      })\r\n    );\r\n\r\n    return request;\r\n  }\r\n\r\n  public logout(): void {\r\n    this.token = '';\r\n    window.localStorage.removeItem('auth-token');\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  public getUserDetails(): UserDetails {\r\n    const token = this.getToken();\r\n    let payload;\r\n    if (token) {\r\n      payload = token.split('.')[1];\r\n      payload = window.atob(payload);\r\n      return JSON.parse(payload);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getUserDetails();\r\n    if (user) {\r\n      return user.exp > Date.now() / 1000;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public register(user: TokenPayload): Observable<any> {\r\n    return this.request('post', 'auth/register', user);\r\n  }\r\n\r\n  public login(user: TokenPayload): Observable<any> {\r\n    return this.request('post', 'auth/login', user);\r\n  }\r\n\r\n  public profile(): Observable<any> {\r\n    return this.request('get', 'users/me');\r\n  }\r\n}\r\n","export const StatusMapToCamelCase = new Map<string, string>([\r\n  ['Completed', 'completed'],\r\n  ['Dropped', 'dropped'],\r\n  ['On-hold', 'onHold'],\r\n  ['Reading', 'reading'],\r\n  ['Plan to read', 'planToRead'],\r\n]);\r\n\r\nexport const Ratings = [\r\n  { value: 10, text: '10 - masterpiece' },\r\n  { value: 9, text: '9 - really good' },\r\n  { value: 8, text: '8 - great' },\r\n  { value: 7, text: '7 - good' },\r\n  { value: 6, text: '6 - okay' },\r\n  { value: 5, text: '5 - not great' },\r\n  { value: 4, text: '4 - bad' },\r\n  { value: 3, text: '3 - really bad' },\r\n  { value: 2, text: '2 - horrible' },\r\n  { value: 1, text: '1 - abysmal' },\r\n];\r\n\r\nexport const statusOrder: Map<string, number> = new Map([\r\n  ['Completed', 1],\r\n  ['Dropped', 2],\r\n  ['On-hold', 3],\r\n  ['Reading', 4],\r\n  ['Plan to read', 5],\r\n]);\r\n\r\nexport interface Book {\r\n  title: string;\r\n  author: string;\r\n  pageCount: number;\r\n  coverImage: string;\r\n  blurb?: string;\r\n  categories: string[];\r\n  datePublished: Date;\r\n}\r\n\r\nexport interface BookListEntry {\r\n  volumeId: string;\r\n  book?: Book;\r\n  status: string;\r\n  notes?: string;\r\n  currentPageCount: number;\r\n  rating?: number;\r\n  review?: number;\r\n  startDate?: Date;\r\n  endDate?: Date;\r\n}\r\n","import { debounceTime } from 'rxjs/operators';\r\nimport { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport {\r\n  MatDialog,\r\n  MatDialogRef,\r\n  MAT_DIALOG_DATA,\r\n} from '@angular/material/dialog';\r\n\r\nimport {\r\n  BookListEntry,\r\n  Ratings,\r\n  StatusMapToCamelCase,\r\n  statusOrder,\r\n} from './book';\r\nimport { AuthenticationService } from '../authentication.service';\r\nimport { BooksService } from '../books.service';\r\nimport { StatsService, Stats } from '../stats.service';\r\n\r\n@Component({\r\n  selector: 'app-booklist',\r\n  templateUrl: './booklist.component.html',\r\n  styleUrls: ['./booklist.component.scss'],\r\n})\r\nexport class BooklistComponent implements OnInit {\r\n  bookList: BookListEntry[];\r\n  visibleBookList: BookListEntry[];\r\n\r\n  @Input() filters: FormGroup;\r\n  @Input() addBookFormGroup: FormGroup;\r\n\r\n  stats: Stats;\r\n  ratings = Ratings;\r\n\r\n  checkboxes = [\r\n    { formControlName: 'completed', text: 'Completed', color: 'lightgreen' },\r\n    { formControlName: 'dropped', text: 'Dropped', color: 'rgb(226, 82, 65)' },\r\n    { formControlName: 'onHold', text: 'On-hold', color: 'lightcoral' },\r\n    {\r\n      formControlName: 'reading',\r\n      text: 'Reading',\r\n      color: 'rgb(60, 150, 236)',\r\n    },\r\n    { formControlName: 'planToRead', text: 'Plan to read', color: 'lightgray' },\r\n  ];\r\n\r\n  newBookOptions: any[];\r\n  titleSelected: string[];\r\n  bookToAdd: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private auth: AuthenticationService,\r\n    public book: BooksService,\r\n    public dialog: MatDialog,\r\n    public stat: StatsService\r\n  ) {\r\n    this.filters = fb.group({\r\n      completed: true,\r\n      dropped: false,\r\n      onHold: false,\r\n      reading: true,\r\n      planToRead: false,\r\n    });\r\n\r\n    this.addBookFormGroup = fb.group({\r\n      title: '',\r\n      status: 'Reading',\r\n      rating: '',\r\n      currentPageCount: 0,\r\n      review: '',\r\n      startDate: Date.now(),\r\n      endDate: Date.now(),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getBooklist();\r\n\r\n    this.onChanges();\r\n  }\r\n\r\n  getBooklist = () => {\r\n    this.auth.profile().subscribe((user) => {\r\n      this.setBookList(user);\r\n    });\r\n  };\r\n\r\n  setBookList = (user) => {\r\n    this.bookList = user.bookList;\r\n\r\n    this.updateStats();\r\n    this.sortBookList();\r\n    this.filterBookList();\r\n  };\r\n\r\n  sortBookList = (): void => {\r\n    this.bookList.sort((a, b) =>\r\n      statusOrder.get(a.status) < statusOrder.get(b.status) ? -1 : 1\r\n    );\r\n  };\r\n\r\n  filterBookList = (): void => {\r\n    this.visibleBookList = this.bookList.filter(\r\n      (entry) => this.filters.get(StatusMapToCamelCase.get(entry.status)).value\r\n    );\r\n  };\r\n\r\n  onChanges() {\r\n    this.updateNewBookOptionsDropDown();\r\n\r\n    this.filters.valueChanges.subscribe(() => {\r\n      this.filterBookList();\r\n    });\r\n  }\r\n\r\n  updateNewBookOptionsDropDown(): void {\r\n    this.addBookFormGroup\r\n      .get('title')\r\n      .valueChanges.pipe(debounceTime(250))\r\n      .subscribe((userInput) => {\r\n        this.book.searchBookByTitle(userInput).subscribe((books) => {\r\n          this.newBookOptions = books;\r\n        });\r\n      });\r\n  }\r\n\r\n  setBookToAdd(book) {\r\n    this.titleSelected = [book.volumeInfo.title];\r\n    this.bookToAdd = book;\r\n\r\n    this.addBookFormGroup.get('title').reset();\r\n  }\r\n\r\n  addBookToUserList() {\r\n    const dataFromAddBookFormGroup = (({\r\n      status,\r\n      review,\r\n      startDate,\r\n      endDate,\r\n      rating,\r\n      currentPageCount,\r\n    }) => ({ status, review, startDate, endDate, rating, currentPageCount }))(\r\n      this.addBookFormGroup.getRawValue()\r\n    );\r\n\r\n    dataFromAddBookFormGroup.currentPageCount =\r\n      this.addBookFormGroup.get('status').value == 'Completed'\r\n        ? this.bookToAdd.volumeInfo.pageCount\r\n        : this.addBookFormGroup.get('currentPageCount').value;\r\n\r\n    const booklistEntryToAdd: BookListEntry = {\r\n      volumeId: this.bookToAdd.id,\r\n      ...dataFromAddBookFormGroup,\r\n    };\r\n\r\n    this.book.addToUserBooklist(booklistEntryToAdd).subscribe((res) => {\r\n      this.getBooklist();\r\n    });\r\n\r\n    this.titleSelected = [];\r\n    this.addBookFormGroup.reset();\r\n  }\r\n\r\n  removeBookFromUserList(volumeId) {\r\n    this.book.removeFromUserBooklist(volumeId).subscribe((res) => {\r\n      this.getBooklist();\r\n    });\r\n  }\r\n\r\n  updateBooklistEntry(entry: BookListEntry) {\r\n    this.book.updateBooklistEntry(entry).subscribe((res) => {\r\n      this.getBooklist();\r\n    });\r\n  }\r\n\r\n  deleteEntryVerification(volumeId): void {\r\n    const dialogRef = this.dialog.open(deleteEntryVerificationDialog, {\r\n      width: '300px',\r\n      height: '200px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((shouldDelete) => {\r\n      if (shouldDelete) this.removeBookFromUserList(volumeId);\r\n    });\r\n  }\r\n\r\n  toggleUpdateEntryDialog(entry: BookListEntry): void {\r\n    const dialogRef = this.dialog.open(updateEntryDialog, {\r\n      width: '20vw',\r\n      height: '50vh',\r\n      data: entry,\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((updatedEntry) => {\r\n      if (!updatedEntry) return;\r\n      this.updateBooklistEntry(updatedEntry);\r\n    });\r\n  }\r\n\r\n  updateStats() {\r\n    this.stats = this.bookList\r\n      ? this.stat.getStats(this.bookList)\r\n      : this.stat.init();\r\n  }\r\n\r\n  removeHTMLTags = (str: string): string => {\r\n    for (let i = 0; i < str.length - 1; i++) {\r\n      if (\r\n        ['.', ',', '!', '?'].includes(str.charAt(i)) &&\r\n        str.charAt(i + 1) != ' '\r\n      ) {\r\n        str =\r\n          str.substring(0, i + 1) + ' ' + str.substring(i + 1, str.length + 1);\r\n      }\r\n    }\r\n    return str.replace(/(<([^>]+)>)/gi, '');\r\n  };\r\n}\r\n\r\n@Component({\r\n  selector: 'booklist-entry-update-dialog',\r\n  templateUrl: './booklist-entry-update-dialog.html',\r\n})\r\nexport class updateEntryDialog {\r\n  @Input() updatedEntryFormGroup: FormGroup;\r\n  ratings = Ratings;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<updateEntryDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public updatedEntry: BookListEntry,\r\n    public fb: FormBuilder\r\n  ) {\r\n    this.updatedEntryFormGroup = fb.group({\r\n      status: updatedEntry.status,\r\n      rating: updatedEntry.rating,\r\n      currentPage: updatedEntry.currentPageCount,\r\n      review: updatedEntry.review,\r\n      startDate: updatedEntry.startDate,\r\n      endDate: updatedEntry.endDate,\r\n    });\r\n  }\r\n\r\n  updateEntry(): void {\r\n    const vId = this.updatedEntry.volumeId;\r\n    const book = this.updatedEntry.book;\r\n    this.updatedEntry = {\r\n      volumeId: vId,\r\n      status: this.updatedEntryFormGroup.get('status').value,\r\n      rating: this.updatedEntryFormGroup.get('rating').value,\r\n      currentPageCount: this.updatedEntryFormGroup.get('currentPage').value,\r\n      review: this.updatedEntryFormGroup.get('review').value,\r\n      startDate: this.updatedEntryFormGroup.get('startDate').value,\r\n      endDate: this.updatedEntryFormGroup.get('endDate').value,\r\n      book: book,\r\n    };\r\n    this.dialogRef.close(this.updatedEntry);\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'book-list-entry-delete-dialog',\r\n  templateUrl: './booklist-entry-delete-dialog.html',\r\n})\r\nexport class deleteEntryVerificationDialog {\r\n  constructor(public dialogRef: MatDialogRef<deleteEntryVerificationDialog>) {}\r\n\r\n  deleteEntry(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<mat-grid-list cols=\"5\" rowHeight=\"25vh\">\r\n  <mat-grid-tile colspan=\"1\" rowspan=\"2\">\r\n    <mat-card class=\"container\">\r\n      <mat-card-title>Filters</mat-card-title>\r\n      <section [formGroup]=\"filters\">\r\n        <div *ngFor=\"let box of checkboxes\">\r\n          <p>\r\n            <mat-checkbox\r\n              color=\"primary\"\r\n              [formControlName]=\"box.formControlName\"\r\n              >{{ box.text }}</mat-checkbox\r\n            >\r\n          </p>\r\n          <div\r\n            class=\"filter-legend\"\r\n            [ngStyle]=\"{ 'background-color': box.color }\"\r\n            *ngIf=\"filters.get(box.formControlName).value\"\r\n          ></div>\r\n        </div>\r\n      </section>\r\n    </mat-card>\r\n  </mat-grid-tile>\r\n  <mat-grid-tile\r\n    colspan=\"3\"\r\n    rowspan=\"{{ bookList.length < 6 ? 6 : bookList.length + 1 }}\"\r\n  >\r\n    <div class=\"book-list-container\">\r\n      <mat-card *ngFor=\"let entry of visibleBookList\" class=\"book-list-entry\">\r\n        <img\r\n          src=\"{{ entry.book.coverImage }}\"\r\n          alt=\"\"\r\n          class=\"book-list-entry-image\"\r\n        />\r\n\r\n        <div class=\"book-list-entry-text\">\r\n          <mat-card-title class=\"book-list-entry-title\">{{\r\n            entry.book.title\r\n          }}</mat-card-title>\r\n          <mat-card-content>\r\n            <h3>by {{ entry.book.author }}</h3>\r\n            <div class=\"line-clamp\">\r\n              <p>{{ removeHTMLTags(entry.book.blurb) }}</p>\r\n            </div>\r\n          </mat-card-content>\r\n        </div>\r\n        <div [ngClass]=\"[entry.status, 'book-list-entry-status-bar']\"></div>\r\n        <div class=\"book-list-entry-info\">\r\n          <mat-card\r\n            [ngClass]=\"['rating-' + entry.rating, 'book-list-entry-rating']\"\r\n          >\r\n            {{ entry.rating ? entry.rating : '-' }} / 10\r\n          </mat-card>\r\n          <mat-card [ngClass]=\"['book-list-entry-category']\">{{\r\n            entry.book.categories[0]\r\n              ? entry.book.categories[0]\r\n              : 'No genre information'\r\n          }}</mat-card>\r\n        </div>\r\n        <button\r\n          class=\"book-list-entry-update-button\"\r\n          mat-icon-button\r\n          (click)=\"toggleUpdateEntryDialog(entry)\"\r\n        >\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button\r\n          class=\"book-list-entry-delete-button\"\r\n          mat-icon-button\r\n          (click)=\"deleteEntryVerification(entry.volumeId)\"\r\n        >\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n      </mat-card>\r\n      <mat-card class=\"no-books\" *ngIf=\"bookList.length == 0\"\r\n        >Nothing to display</mat-card\r\n      >\r\n    </div>\r\n  </mat-grid-tile>\r\n  <mat-grid-tile colspan=\"1\" rowspan=\"3\">\r\n    <div class=\"add-a-book-container\">\r\n      <mat-card class=\"container\">\r\n        <mat-card-title class=\"add-a-book-header\">Add a book</mat-card-title>\r\n        <form [formGroup]=\"addBookFormGroup\" (ngSubmit)=\"addBookToUserList()\">\r\n          <mat-form-field>\r\n            <mat-chip-list #chipList>\r\n              <mat-chip\r\n                *ngFor=\"let title of titleSelected\"\r\n                [removable]=\"true\"\r\n                (removed)=\"titleSelected = []\"\r\n              >\r\n                <span>{{ title }}</span>\r\n                <mat-icon matChipRemove>cancel</mat-icon>\r\n              </mat-chip>\r\n              <input\r\n                #autocompleteInput\r\n                type=\"text\"\r\n                placeholder=\"Enter title\"\r\n                matInput\r\n                formControlName=\"title\"\r\n                [matAutocomplete]=\"auto\"\r\n                [matChipInputFor]=\"chipList\"\r\n              />\r\n              <mat-autocomplete #auto=\"matAutocomplete\">\r\n                <mat-option\r\n                  *ngFor=\"let option of newBookOptions\"\r\n                  [value]=\"option.volumeInfo.title\"\r\n                  (onSelectionChange)=\"setBookToAdd(option)\"\r\n                >\r\n                  {{ option.volumeInfo.title }} by\r\n                  {{ option.volumeInfo.authors }}\r\n                </mat-option>\r\n              </mat-autocomplete>\r\n            </mat-chip-list>\r\n          </mat-form-field>\r\n          <mat-card-content>\r\n            <mat-form-field>\r\n              <mat-label>Status</mat-label>\r\n              <mat-select name=\"addBookStatus\" formControlName=\"status\">\r\n                <mat-option value=\"Completed\">Completed</mat-option>\r\n                <mat-option value=\"Dropped\">Dropped</mat-option>\r\n                <mat-option value=\"On-hold\">On-hold</mat-option>\r\n                <mat-option value=\"Reading\">Reading</mat-option>\r\n                <mat-option value=\"Plan to read\">Plan to read</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field\r\n              *ngIf=\"\r\n                addBookFormGroup.get('status').value == 'Completed' ||\r\n                addBookFormGroup.get('status').value == 'Dropped'\r\n              \"\r\n            >\r\n              <mat-label>Rating</mat-label>\r\n              <mat-select name=\"addBookRating\" formControlName=\"rating\">\r\n                <mat-option\r\n                  *ngFor=\"let option of ratings\"\r\n                  [value]=\"option.value\"\r\n                  >{{ option.text }}</mat-option\r\n                >\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field\r\n              *ngIf=\"addBookFormGroup.get('status').value == 'Completed'\"\r\n            >\r\n              <mat-label>Review</mat-label>\r\n              <textarea\r\n                matInput\r\n                formControlName=\"review\"\r\n                name=\"addBookReview\"\r\n              ></textarea>\r\n            </mat-form-field>\r\n            <mat-form-field\r\n              *ngIf=\"\r\n                addBookFormGroup.get('status').value == 'Reading' ||\r\n                addBookFormGroup.get('status').value == 'On-hold'\r\n              \"\r\n            >\r\n              <input\r\n                matInput\r\n                name=\"currentPageCount\"\r\n                placeholder=\"Current Page\"\r\n                formControlName=\"currentPageCount\"\r\n              />\r\n            </mat-form-field>\r\n            <mat-form-field\r\n              style=\"width: 85%\"\r\n              appearance=\"fill\"\r\n              *ngIf=\"\r\n                !(\r\n                  addBookFormGroup.get('status').value == 'Plan to read' ||\r\n                  addBookFormGroup.get('status').value == null\r\n                )\r\n              \"\r\n            >\r\n              <mat-label>Start date</mat-label>\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"picker\"\r\n                formControlName=\"startDate\"\r\n              />\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                [for]=\"picker\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #picker></mat-datepicker>\r\n            </mat-form-field>\r\n            <mat-form-field\r\n              style=\"width: 85%\"\r\n              appearance=\"fill\"\r\n              *ngIf=\"\r\n                !(\r\n                  addBookFormGroup.get('status').value == 'Plan to read' ||\r\n                  addBookFormGroup.get('status').value == 'Reading' ||\r\n                  addBookFormGroup.get('status').value == null\r\n                )\r\n              \"\r\n            >\r\n              <mat-label>End date</mat-label>\r\n              <input\r\n                matInput\r\n                [matDatepicker]=\"picker\"\r\n                formControlName=\"endDate\"\r\n              />\r\n              <mat-datepicker-toggle\r\n                matSuffix\r\n                [for]=\"picker\"\r\n              ></mat-datepicker-toggle>\r\n              <mat-datepicker #picker></mat-datepicker>\r\n            </mat-form-field>\r\n          </mat-card-content>\r\n          <button\r\n            mat-raised-button\r\n            class=\"btn-block\"\r\n            style=\"position: absolute; bottom: 10%; width: 90%\"\r\n            (click)=\"addBookFormGroup.reset()\"\r\n          >\r\n            Clear\r\n          </button>\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            class=\"btn-block\"\r\n            type=\"submit\"\r\n            style=\"position: absolute; bottom: 2%; width: 90%\"\r\n          >\r\n            Add entry!\r\n          </button>\r\n        </form>\r\n      </mat-card>\r\n    </div>\r\n  </mat-grid-tile>\r\n  <mat-grid-tile colspan=\"1\" rowspan=\"2\">\r\n    <mat-card class=\"container\">\r\n      <mat-card-title>Stats</mat-card-title>\r\n      <mat-card-content>\r\n        <h3>Completed: {{ stats.completed }}</h3>\r\n        <h3>Dropped: {{ stats.dropped }}</h3>\r\n        <h3>On-hold: {{ stats.onHold }}</h3>\r\n        <h3>Reading: {{ stats.reading }}</h3>\r\n        <h3>Plan to read: {{ stats.planToRead }}</h3>\r\n        <h3>Pages read: {{ stats.pagesRead }}</h3>\r\n        <h3>Average rating: {{ stats.averageRating }}</h3>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n","<h1 mat-dialog-title style=\"text-align: center\">\r\n  Update <span style=\"font-style: italic\">{{ updatedEntry.book.title }}</span>\r\n</h1>\r\n<div class=\"add-a-book-container\">\r\n  <form [formGroup]=\"updatedEntryFormGroup\">\r\n    <mat-form-field>\r\n      <mat-label>Status</mat-label>\r\n      <mat-select name=\"addBookStatus\" formControlName=\"status\">\r\n        <mat-option value=\"Completed\">Completed</mat-option>\r\n        <mat-option value=\"Dropped\">Dropped</mat-option>\r\n        <mat-option value=\"On-hold\">On-hold</mat-option>\r\n        <mat-option value=\"Reading\">Reading</mat-option>\r\n        <mat-option value=\"Plan to read\">Plan to read</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field\r\n      *ngIf=\"\r\n                updatedEntryFormGroup.get('status').value == 'Completed' ||\r\n                updatedEntryFormGroup.get('status').value == 'Dropped'\r\n              \"\r\n    >\r\n      <mat-label>Rating</mat-label>\r\n      <mat-select name=\"addBookRating\" formControlName=\"rating\">\r\n        <mat-option *ngFor=\"let option of ratings\" [value]=\"option.value\"\r\n          >{{ option.text }}</mat-option\r\n        >\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field\r\n      *ngIf=\"updatedEntryFormGroup.get('status').value == 'Completed'\"\r\n    >\r\n      <mat-label>Review</mat-label>\r\n      <textarea\r\n        matInput\r\n        formControlName=\"review\"\r\n        name=\"addBookReview\"\r\n      ></textarea>\r\n    </mat-form-field>\r\n    <mat-form-field\r\n      *ngIf=\"\r\n                updatedEntryFormGroup.get('status').value == 'Reading' ||\r\n                updatedEntryFormGroup.get('status').value == 'On-hold'\r\n              \"\r\n    >\r\n      <input\r\n        matInput\r\n        name=\"currentPage\"\r\n        placeholder=\"Current Page\"\r\n        formControlName=\"currentPage\"\r\n      />\r\n    </mat-form-field>\r\n  </form>\r\n</div>\r\n<div>\r\n  <button\r\n    mat-raised-button\r\n    style=\"margin-right: 1vw; margin-left: 2.8vw\"\r\n    (click)=\"cancel()\"\r\n  >\r\n    Cancel\r\n  </button>\r\n  <button\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    (click)=\"updateEntry()\"\r\n    cdkFocusInitial\r\n  >\r\n    Update\r\n  </button>\r\n</div>\r\n","<h1 mat-dialog-title style=\"text-align: center\">\r\n  Are you sure you want to delete this entry?\r\n</h1>\r\n<div style=\"margin-top: 10%\">\r\n  <button\r\n    mat-raised-button\r\n    style=\"margin-left: 18%; float: left\"\r\n    (click)=\"cancel()\"\r\n  >\r\n    Cancel\r\n  </button>\r\n  <button\r\n    mat-stroked-button\r\n    style=\"margin-right: 18%; float: right\"\r\n    color=\"warn\"\r\n    (click)=\"deleteEntry()\"\r\n    cdkFocusInitial\r\n  >\r\n    Delete\r\n  </button>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Book, BookListEntry } from './booklist/book';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BooksService {\r\n  public booksData;\r\n\r\n  constructor(private http: HttpClient, private auth: AuthenticationService) {}\r\n\r\n  public searchBookByTitle(title: string): Observable<any> {\r\n    return this.http.get<any>('/api/books', {\r\n      params: {\r\n        title: title,\r\n      },\r\n    });\r\n  }\r\n\r\n  public addToUserBooklist(booklistEntry: BookListEntry) {\r\n    return this.http.post<any>(\r\n      '/api/users/add-to-booklist',\r\n      {\r\n        status: booklistEntry.status,\r\n        notes: booklistEntry.notes,\r\n        currentPageCount: booklistEntry.currentPageCount,\r\n        rating: booklistEntry.rating,\r\n        review: booklistEntry.review,\r\n        startDate: booklistEntry.startDate,\r\n        endDate: booklistEntry.endDate,\r\n      },\r\n      {\r\n        params: {\r\n          volumeId: booklistEntry.volumeId,\r\n        },\r\n        headers: { Authorization: `Bearer ${this.auth.getToken()}` },\r\n      }\r\n    );\r\n  }\r\n\r\n  public updateBooklistEntry(booklistEntry: BookListEntry) {\r\n    return this.http.put('/api/users/update-booklist-entry', booklistEntry, {\r\n      params: {\r\n        volumeId: booklistEntry.volumeId,\r\n      },\r\n      headers: { Authorization: `Bearer ${this.auth.getToken()}` },\r\n    });\r\n  }\r\n\r\n  public removeFromUserBooklist(volumeId: string) {\r\n    return this.http.delete('api/users/remove-from-booklist', {\r\n      params: {\r\n        volumeId: volumeId,\r\n      },\r\n      headers: { Authorization: `Bearer ${this.auth.getToken()}` },\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-friends',\n  templateUrl: './friends.component.html',\n  styleUrls: ['./friends.component.scss']\n})\nexport class FriendsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"wrapper\">\n    <h1>Friends Page Coming Soon<span class=\"dot\">.</span></h1>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService, UserDetails } from '../authentication.service';\r\nimport { Stats, StatsService } from '../stats.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  user: UserDetails;\r\n  stats: Stats;\r\n\r\n  constructor(\r\n    private auth: AuthenticationService,\r\n    private statsService: StatsService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getUserDetails();\r\n  }\r\n\r\n  getUserDetails = () => {\r\n    this.auth.profile().subscribe(\r\n      (user) => {\r\n        this.user = user;\r\n        this.stats = this.statsService.getStats(user.bookList);\r\n      },\r\n      (err) => {\r\n        this.user = null;\r\n      }\r\n    );\r\n  };\r\n}\r\n","<div class=\"container\">\r\n  <mat-grid-list cols=\"3\" rowHeight=\"45%\">\r\n    <mat-grid-tile colspan=\"2\" rowspan=\"2\">\r\n      <div *ngIf=\"user\" style=\"position: absolute; left: 2%; top: 5%\">\r\n        <h1 style=\"padding-top: 1vh\">Welcome back, {{ user.name }}!</h1>\r\n        <!-- <h3 style=\"padding-top: 1vh\">\r\n        Are you still reading\r\n        <span style=\"font-style: italic\">The Power of Habit?</span>\r\n      </h3>\r\n      <button mat-raised-button color=\"primary\" style=\"padding-top: 1vh\">\r\n        You can update its entry here\r\n      </button> -->\r\n      </div>\r\n      <div *ngIf=\"!user\" style=\"position: absolute; left: 2%; top: 5%\">\r\n        <h1 style=\"padding-top: 1vh\">\r\n          Welcome to Book Hero, your complete solution for keeping track of and\r\n          sharing your book list!\r\n        </h1>\r\n      </div>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile colspan=\"1\" rowspan=\"1\">\r\n      <mat-card style=\"height: 95%; width: 80%\" *ngIf=\"user\">\r\n        <h2>Stats</h2>\r\n        <h4 style=\"line-height: 12px\">Completed: {{ stats.completed }}</h4>\r\n        <h4 style=\"line-height: 12px\">Dropped: {{ stats.dropped }}</h4>\r\n        <h4 style=\"line-height: 12px\">On-hold: {{ stats.onHold }}</h4>\r\n        <h4 style=\"line-height: 12px\">Reading: {{ stats.reading }}</h4>\r\n        <h4 style=\"line-height: 12px\">Plan to read: {{ stats.planToRead }}</h4>\r\n        <h4 style=\"line-height: 12px\">Pages read: {{ stats.pagesRead }}</h4>\r\n        <h4 style=\"line-height: 12px\">\r\n          Average rating: {{ stats.averageRating }}\r\n        </h4>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile colspan=\"1\" rowspan=\"1\">\r\n      <mat-card style=\"height: 90%; width: 80%\" *ngIf=\"user\">\r\n        <h2>Friend Activity</h2>\r\n        <mat-card-content>\r\n          <h3>Coming soon!</h3>\r\n          <!-- <p>\r\n          John Doe is currently reading:\r\n          <span style=\"font-style: italic\"\r\n            >How to Win Friends and Influence People</span\r\n          >\r\n          ...\r\n        </p>\r\n        <p>\r\n          Bryan Horne is currently reading:\r\n          <span style=\"font-style: italic\">The Slight Edge</span>\r\n          by Jeff Olsen\r\n        </p>\r\n        <p>\r\n          Sally Johnson just finished:\r\n          <span style=\"font-style: italic\">The Art of War</span>\r\n          by Sun Tzu\r\n        </p> -->\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  credentials: TokenPayload = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n\r\n  login() {\r\n    this.auth.login(this.credentials).subscribe(\r\n      () => {\r\n        this.router.navigateByUrl('/profile');\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"form-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  <mat-card class=\"box\">\r\n    <mat-card-header>\r\n      <mat-card-title>Log in</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <form class=\"auth-form\" (submit)=\"login()\">\r\n      <mat-card-content>\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n            matInput\r\n            type=\"email\"\r\n            class=\"\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n            [(ngModel)]=\"credentials.email\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n            matInput\r\n            type=\"password\"\r\n            class=\"\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            [(ngModel)]=\"credentials.password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n      <button mat-stroked-button color=\"accent\" class=\"btn-block\" type=\"submit\">\r\n        Log in\r\n      </button>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService, UserDetails } from '../authentication.service';\r\n\r\n@Component({\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  details: UserDetails;\r\n\r\n  constructor(private auth: AuthenticationService) {}\r\n\r\n  ngOnInit() {\r\n    this.auth.profile().subscribe(\r\n      (user) => {\r\n        this.details = user;\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"form-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  <mat-card class=\"box\">\r\n    <mat-card-header>\r\n      <mat-card-title>Your Profile</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <br />\r\n      <mat-action-row>\r\n        <h3>Full name</h3>\r\n        <p>{{ details?.name }}</p>\r\n      </mat-action-row>\r\n      <br />\r\n      <mat-action-row>\r\n        <h3>Email</h3>\r\n        <p>{{ details?.email }}</p>\r\n      </mat-action-row>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  credentials: TokenPayload = {\r\n    email: '',\r\n    name: '',\r\n    password: '',\r\n  };\r\n\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  register() {\r\n    this.auth.register(this.credentials).subscribe(\r\n      () => {\r\n        this.router.navigateByUrl('/profile');\r\n      },\r\n      (err) => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"form-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n  <mat-card class=\"box\">\r\n    <mat-card-header>\r\n      <mat-card-title>Register</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <form class=\"auth-form\" (submit)=\"register()\">\r\n      <mat-card-content>\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            class=\"\"\r\n            name=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            [(ngModel)]=\"credentials.name\"\r\n            placeholder=\"Full name\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n            matInput\r\n            type=\"email\"\r\n            class=\"\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n            [(ngModel)]=\"credentials.email\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"full-width\">\r\n          <input\r\n            matInput\r\n            type=\"password\"\r\n            class=\"\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            [(ngModel)]=\"credentials.password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n\r\n      <button mat-stroked-button color=\"accent\" class=\"btn-block\">\r\n        Register\r\n      </button>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { Book, BookListEntry } from './booklist/book';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StatsService {\n  constructor() {}\n\n  public getStats(bookList: BookListEntry[]): Stats {\n    return {\n      completed: bookList.filter((entry) => entry.status == 'Completed').length,\n      dropped: bookList.filter((entry) => entry.status == 'Dropped').length,\n      onHold: bookList.filter((entry) => entry.status == 'On-hold').length,\n      reading: bookList.filter((entry) => entry.status == 'Reading').length,\n      planToRead: bookList.filter((entry) => entry.status == 'Plan to read')\n        .length,\n      pagesRead: this.getPagesRead(bookList),\n      averageRating: this.getAverageRating(bookList),\n    };\n  }\n\n  private getPagesRead(bookList: BookListEntry[]): number {\n    var total = 0;\n    bookList.forEach((entry) => (total += entry.currentPageCount));\n    return total;\n  }\n\n  private getAverageRating(bookList: BookListEntry[]): string {\n    if (bookList.length == 0) return '';\n\n    var totalRating = 0;\n    var numberOfRatings = 0;\n\n    bookList.forEach((entry) => {\n      if (entry.rating) {\n        totalRating += entry.rating;\n        numberOfRatings++;\n      }\n    });\n\n    return (Math.round((totalRating / numberOfRatings) * 100) / 100).toFixed(2);\n  }\n\n  init(): Stats {\n    return {\n      completed: 0,\n      dropped: 0,\n      onHold: 0,\n      reading: 0,\n      planToRead: 0,\n      pagesRead: 0,\n      averageRating: '0',\n    };\n  }\n}\n\nexport interface Stats {\n  completed: number;\n  dropped: number;\n  onHold: number;\n  reading: number;\n  planToRead: number;\n  pagesRead: number;\n  averageRating: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"wrapper\">\n    <h1>Timeline Page Coming Soon<span class=\"dot\">.</span></h1>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"],"sourceRoot":"webpack:///"}
{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authentication.service.ts","./src/app/booklist/booklist.component.ts","./src/app/booklist/booklist.component.html","./src/app/booklist/booklist-entry-update-dialog.html","./src/app/booklist/booklist-entry-delete-dialog.html","./src/app/books.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nconst materialModules = [\n  CdkTreeModule,\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatFormFieldModule,\n  MatButtonToggleModule,\n  MatTreeModule,\n  OverlayModule,\n  PortalModule,\n  MatBadgeModule,\n  MatGridListModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatTooltipModule,\n  MatNativeDateModule,\n  MatDialogModule,\n];\n\n@NgModule({\n  imports: [CommonModule, ...materialModules],\n  exports: [...materialModules],\n})\nexport class AngularMaterialModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { BooklistComponent } from './booklist/booklist.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'my-list', component: BooklistComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { AuthenticationService } from './authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  constructor(public auth: AuthenticationService) {}\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <h1 [routerLink]=\"'/'\">Book Hero</h1>\n    <span class=\"menu-spacer\"></span>\n    <div fxShow=\"true\" fxFlex fxLayout>\n      <div fxFlex>\n        <a mat-button *ngIf=\"!auth.isLoggedIn()\" [routerLink]=\"'/login'\"\n          >Log in</a\n        >\n        <a mat-button *ngIf=\"!auth.isLoggedIn()\" [routerLink]=\"'/register'\"\n          >Sign up</a\n        >\n\n        <a mat-button *ngIf=\"auth.isLoggedIn()\" [routerLink]=\"'/my-list'\"\n          >My List</a\n        >\n        <a mat-button *ngIf=\"auth.isLoggedIn()\" [routerLink]=\"'/timeline'\"\n          >Timeline</a\n        >\n        <a mat-button *ngIf=\"auth.isLoggedIn()\" [routerLink]=\"'/friends'\"\n          >Friends</a\n        >\n      </div>\n      <div fxFlex fxLayoutAlign=\"flex-end center\">\n        <a mat-button *ngIf=\"auth.isLoggedIn()\" [routerLink]=\"'/profile'\"\n          >Profile</a\n        >\n        <a mat-button *ngIf=\"auth.isLoggedIn()\" (click)=\"auth.logout()\"\n          >Logout</a\n        >\n      </div>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\n\n// Routing\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// Angular Material\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { NgModule } from '@angular/core';\n\n// FormsModule\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// Angular Flex Layout\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n// Components\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BooklistComponent } from './booklist/booklist.component';\nimport { updateEntryDialog } from './booklist/booklist.component';\nimport { deleteEntryVerificationDialog } from './booklist/booklist.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    ProfileComponent,\n    LoginComponent,\n    HomeComponent,\n    BooklistComponent,\n    updateEntryDialog,\n    deleteEntryVerificationDialog,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    FlexLayoutModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface UserDetails {\n  _id: string;\n  email: string;\n  name: string;\n  exp: number;\n  iat: number;\n}\n\ninterface TokenResponse {\n  token: string;\n}\n\nexport interface TokenPayload {\n  email: string;\n  password: string;\n  name?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  private token: string;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  private saveToken(token: string): void {\n    localStorage.setItem('auth-token', token);\n    this.token = token;\n  }\n\n  public getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem('auth-token');\n    }\n    return this.token;\n  }\n\n  private request(\n    method: 'post' | 'get',\n    uri: 'auth/login' | 'auth/register' | 'users/me',\n    user?: TokenPayload\n  ): Observable<any> {\n    let base$;\n\n    if (method === 'post') {\n      base$ = this.http.post(`/api/${uri}`, user);\n    } else {\n      base$ = this.http.get(`/api/${uri}`, {\n        headers: { Authorization: `Bearer ${this.getToken()}` },\n      });\n    }\n\n    const request = base$.pipe(\n      map((data: TokenResponse) => {\n        if (data.token) {\n          this.saveToken(data.token);\n        }\n        return data;\n      })\n    );\n\n    return request;\n  }\n\n  public logout(): void {\n    this.token = '';\n    window.localStorage.removeItem('auth-token');\n    this.router.navigateByUrl('/');\n  }\n\n  public getUserDetails(): UserDetails {\n    const token = this.getToken();\n    let payload;\n    if (token) {\n      payload = token.split('.')[1];\n      payload = window.atob(payload);\n      return JSON.parse(payload);\n    } else {\n      return null;\n    }\n  }\n\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails();\n    if (user) {\n      return user.exp > Date.now() / 1000;\n    } else {\n      return false;\n    }\n  }\n\n  public register(user: TokenPayload): Observable<any> {\n    return this.request('post', 'auth/register', user);\n  }\n\n  public login(user: TokenPayload): Observable<any> {\n    return this.request('post', 'auth/login', user);\n  }\n\n  public profile(): Observable<any> {\n    return this.request('get', 'users/me');\n  }\n}\n","import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { AuthenticationService } from '../authentication.service';\nimport { BookListEntry } from './book';\nimport { BooksService } from '../books.service';\nimport { debounceTime } from 'rxjs/operators';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-booklist',\n  templateUrl: './booklist.component.html',\n  styleUrls: ['./booklist.component.scss'],\n})\nexport class BooklistComponent implements OnInit {\n  bookList: BookListEntry[];\n\n  @Input() filters: FormGroup;\n  @Input() addBookFormGroup: FormGroup;\n\n  stats = {\n    completed: 0,\n    dropped: 0,\n    onHold: 0,\n    reading: 0,\n    planToRead: 0,\n    pagesRead: 0,\n    averageRating: '0',\n  };\n\n  ratings = [\n    { value: 10, text: '10 - masterpiece' },\n    { value: 9, text: '9 - really good' },\n    { value: 8, text: '8 - great' },\n    { value: 7, text: '7 - good' },\n    { value: 6, text: '6 - okay' },\n    { value: 5, text: '5 - not great' },\n    { value: 4, text: '4 - bad' },\n    { value: 3, text: '3 - really bad' },\n    { value: 2, text: '2 - horrible' },\n    { value: 1, text: '1 - abysmal' },\n  ];\n\n  checkboxes = [\n    { formControlName: 'completed', text: 'Completed', color: 'lightgreen' },\n    { formControlName: 'dropped', text: 'Dropped', color: 'rgb(226, 82, 65)' },\n    { formControlName: 'onHold', text: 'On-hold', color: 'lightcoral' },\n    {\n      formControlName: 'reading',\n      text: 'Reading',\n      color: 'rgb(60, 150, 236)',\n    },\n    { formControlName: 'planToRead', text: 'Plan to read', color: 'lightgray' },\n  ];\n\n  newBookOptions: any[];\n  titleSelected: string[];\n  bookToAdd: any;\n\n  constructor(\n    private fb: FormBuilder,\n    private auth: AuthenticationService,\n    public book: BooksService,\n    public dialog: MatDialog\n  ) {\n    this.filters = fb.group({\n      completed: true,\n      dropped: false,\n      onHold: false,\n      reading: true,\n      planToRead: false,\n    });\n\n    this.addBookFormGroup = fb.group({\n      title: '',\n      status: 'Reading',\n      rating: '',\n      currentPage: 0,\n      review: '',\n      startDate: Date.now(),\n      endDate: Date.now(),\n    });\n  }\n\n  statusOrder: Map<string, number> = new Map();\n  ngOnInit(): void {\n    this.statusOrder.set('Completed', 1);\n    this.statusOrder.set('Dropped', 2);\n    this.statusOrder.set('On-hold', 3);\n    this.statusOrder.set('Reading', 4);\n    this.statusOrder.set('Plan to read', 5);\n\n    this.getBooklist();\n\n    this.onChanges();\n  }\n\n  getBooklist = () => {\n    this.auth.profile().subscribe((user) => {\n      this.setBookList(user);\n    });\n  };\n\n  setBookList = (user) => {\n    this.bookList = user.bookList;\n    this.updateStats();\n    this.bookList.sort((a, b) =>\n      this.statusOrder.get(a.status) < this.statusOrder.get(b.status) ? -1 : 1\n    );\n    this.bookList = this.bookList.filter((entry) =>\n      this.canDisplay(entry.status)\n    );\n  };\n\n  onChanges() {\n    this.addBookFormGroup\n      .get('title')\n      .valueChanges.pipe(debounceTime(250))\n      .subscribe((userInput) => {\n        this.book.searchBookByTitle(userInput).subscribe((books) => {\n          this.newBookOptions = books;\n        });\n      });\n\n    this.filters.valueChanges.subscribe(() => {\n      this.getBooklist();\n    });\n  }\n\n  removeHTMLTags = (str: string): string => {\n    return str.replace(/(<([^>]+)>)/gi, '');\n  };\n\n  canDisplay = (status): boolean => {\n    if (status == 'Completed') return this.filters.value.completed;\n    if (status == 'Dropped') return this.filters.value.dropped;\n    if (status == 'On-hold') return this.filters.value.onHold;\n    if (status == 'Reading') return this.filters.value.reading;\n    if (status == 'Plan to read') return this.filters.value.planToRead;\n    return false;\n  };\n\n  setBook(book) {\n    var title = book.volumeInfo.title;\n    if (!title) {\n      this.titleSelected = [];\n    } else {\n      this.titleSelected = [title];\n    }\n\n    this.bookToAdd = book;\n\n    this.addBookFormGroup.get('title').reset();\n  }\n\n  addBookToUserList() {\n    const booklistEntryToAdd: BookListEntry = {\n      volumeId: this.bookToAdd.id,\n      status: this.addBookFormGroup.get('status').value,\n      currentPageCount:\n        this.addBookFormGroup.get('status').value == 'Completed'\n          ? this.bookToAdd.volumeInfo.pageCount\n          : this.addBookFormGroup.get('currentPage').value,\n      rating: this.addBookFormGroup.get('rating').value,\n      review: this.addBookFormGroup.get('review').value,\n      startDate: this.addBookFormGroup.get('startDate').value,\n      endDate: this.addBookFormGroup.get('endDate').value,\n    };\n\n    this.book.addToUserBooklist(booklistEntryToAdd).subscribe((res) => {\n      this.getBooklist();\n    });\n\n    this.titleSelected = [];\n    this.addBookFormGroup.reset();\n  }\n\n  removeBookFromUserList(volumeId) {\n    this.book.removeFromUserBooklist(volumeId).subscribe((res) => {\n      this.getBooklist();\n    });\n  }\n\n  updateBooklistEntry(entry: BookListEntry) {\n    this.book.updateBooklistEntry(entry).subscribe((res) => {\n      this.getBooklist();\n    });\n  }\n\n  deleteEntryVerification(volumeId): void {\n    const dialogRef = this.dialog.open(deleteEntryVerificationDialog, {\n      width: '20vw',\n      height: '20vh',\n    });\n\n    dialogRef.afterClosed().subscribe((shouldDelete) => {\n      if (shouldDelete) this.removeBookFromUserList(volumeId);\n    });\n  }\n\n  toggleUpdateEntryDialog(entry: BookListEntry): void {\n    const dialogRef = this.dialog.open(updateEntryDialog, {\n      width: '20vw',\n      height: '50vh',\n      data: entry,\n    });\n\n    dialogRef.afterClosed().subscribe((updatedEntry) => {\n      if (!updatedEntry) return;\n      this.updateBooklistEntry(updatedEntry);\n    });\n  }\n\n  updateStats() {\n    this.stats = {\n      completed: this.bookList.filter((entry) => entry.status == 'Completed')\n        .length,\n      dropped: this.bookList.filter((entry) => entry.status == 'Dropped')\n        .length,\n      onHold: this.bookList.filter((entry) => entry.status == 'On-hold').length,\n      reading: this.bookList.filter((entry) => entry.status == 'Reading')\n        .length,\n      planToRead: this.bookList.filter(\n        (entry) => entry.status == 'Plan to read'\n      ).length,\n      pagesRead: this.getPagesRead(),\n      averageRating: this.getAverageRating(),\n    };\n  }\n\n  getPagesRead(): number {\n    var total = 0;\n    this.bookList.forEach((entry) => (total += entry.currentPageCount));\n    return total;\n  }\n\n  getAverageRating(): string {\n    if (this.bookList.length == 0) return '';\n\n    var totalRating = 0;\n    var numberOfRatings = 0;\n\n    this.bookList.forEach((entry) => {\n      if (entry.rating) {\n        totalRating += entry.rating;\n        numberOfRatings++;\n      }\n    });\n\n    return (Math.round((totalRating / numberOfRatings) * 100) / 100).toFixed(2);\n  }\n}\n\n@Component({\n  selector: 'booklist-entry-update-dialog',\n  templateUrl: './booklist-entry-update-dialog.html',\n})\nexport class updateEntryDialog {\n  @Input() updatedEntryFormGroup: FormGroup;\n  ratings = [\n    { value: 10, text: '10 - masterpiece' },\n    { value: 9, text: '9 - really good' },\n    { value: 8, text: '8 - great' },\n    { value: 7, text: '7 - good' },\n    { value: 6, text: '6 - okay' },\n    { value: 5, text: '5 - not great' },\n    { value: 4, text: '4 - bad' },\n    { value: 3, text: '3 - really bad' },\n    { value: 2, text: '2 - horrible' },\n    { value: 1, text: '1 - abysmal' },\n  ];\n\n  constructor(\n    public dialogRef: MatDialogRef<updateEntryDialog>,\n    @Inject(MAT_DIALOG_DATA) public updatedEntry: BookListEntry,\n    public fb: FormBuilder\n  ) {\n    this.updatedEntryFormGroup = fb.group({\n      status: updatedEntry.status,\n      rating: updatedEntry.rating,\n      currentPage: updatedEntry.currentPageCount,\n      review: updatedEntry.review,\n      startDate: updatedEntry.startDate,\n      endDate: updatedEntry.endDate,\n    });\n  }\n\n  updateEntry(): void {\n    const vId = this.updatedEntry.volumeId;\n    const book = this.updatedEntry.book;\n    this.updatedEntry = {\n      volumeId: vId,\n      status: this.updatedEntryFormGroup.get('status').value,\n      rating: this.updatedEntryFormGroup.get('rating').value,\n      currentPageCount: this.updatedEntryFormGroup.get('currentPage').value,\n      review: this.updatedEntryFormGroup.get('review').value,\n      startDate: this.updatedEntryFormGroup.get('startDate').value,\n      endDate: this.updatedEntryFormGroup.get('endDate').value,\n      book: book,\n    };\n    this.dialogRef.close(this.updatedEntry);\n  }\n\n  cancel(): void {\n    this.dialogRef.close(false);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n}\n\n@Component({\n  selector: 'book-list-entry-delete-dialog',\n  templateUrl: './booklist-entry-delete-dialog.html',\n})\nexport class deleteEntryVerificationDialog {\n  constructor(public dialogRef: MatDialogRef<deleteEntryVerificationDialog>) {}\n\n  deleteEntry(): void {\n    this.dialogRef.close(true);\n  }\n\n  cancel(): void {\n    this.dialogRef.close(false);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n}\n","<mat-grid-list cols=\"5\" rowHeight=\"25vh\">\n  <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n    <mat-card class=\"container\">\n      <mat-card-title>Filters</mat-card-title>\n      <section [formGroup]=\"filters\">\n        <div *ngFor=\"let box of checkboxes\">\n          <p>\n            <mat-checkbox\n              color=\"primary\"\n              [formControlName]=\"box.formControlName\"\n              >{{ box.text }}</mat-checkbox\n            >\n          </p>\n          <div\n            class=\"filter-legend\"\n            [ngStyle]=\"{ 'background-color': box.color }\"\n            *ngIf=\"filters.get(box.formControlName).value\"\n          ></div>\n        </div>\n      </section>\n    </mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile\n    colspan=\"3\"\n    rowspan=\"{{ bookList.length < 6 ? 6 : bookList.length + 1 }}\"\n  >\n    <div class=\"book-list-container\">\n      <mat-card *ngFor=\"let entry of bookList\" class=\"book-list-entry\">\n        <img\n          src=\"{{ entry.book.coverImage }}\"\n          alt=\"\"\n          class=\"book-list-entry-image\"\n        />\n\n        <div class=\"book-list-entry-text\">\n          <mat-card-title class=\"book-list-entry-title\">{{\n            entry.book.title\n          }}</mat-card-title>\n          <mat-card-content>\n            <h3>by {{ entry.book.author }}</h3>\n            <div class=\"line-clamp\">\n              <p>{{ removeHTMLTags(entry.book.blurb) }}</p>\n            </div>\n          </mat-card-content>\n        </div>\n        <div [ngClass]=\"[entry.status, 'book-list-entry-status-bar']\"></div>\n        <div class=\"book-list-entry-info\">\n          <mat-card\n            [ngClass]=\"['rating-' + entry.rating, 'book-list-entry-rating']\"\n            *ngIf=\"entry.rating\"\n          >\n            {{ entry.rating }} / 10\n          </mat-card>\n          <mat-card\n            [ngClass]=\"['rating-' + entry.rating, 'book-list-entry-rating']\"\n            *ngIf=\"!entry.rating\"\n          >\n            - / 10\n          </mat-card>\n          <mat-card [ngClass]=\"['book-list-entry-category']\">{{\n            entry.book.categories[0]\n              ? entry.book.categories[0]\n              : 'No genre information'\n          }}</mat-card>\n        </div>\n        <button\n          class=\"book-list-entry-update-button\"\n          mat-icon-button\n          (click)=\"toggleUpdateEntryDialog(entry)\"\n        >\n          <mat-icon>edit</mat-icon>\n        </button>\n        <button\n          class=\"book-list-entry-delete-button\"\n          mat-icon-button\n          (click)=\"deleteEntryVerification(entry.volumeId)\"\n        >\n          <mat-icon>delete</mat-icon>\n        </button>\n      </mat-card>\n      <mat-card class=\"no-books\" *ngIf=\"bookList.length == 0\"\n        >Nothing to display</mat-card\n      >\n    </div>\n  </mat-grid-tile>\n  <mat-grid-tile colspan=\"1\" rowspan=\"3\">\n    <div class=\"add-a-book-container\">\n      <mat-card class=\"container\">\n        <mat-card-title class=\"add-a-book-header\">Add a book</mat-card-title>\n        <form [formGroup]=\"addBookFormGroup\" (ngSubmit)=\"addBookToUserList()\">\n          <mat-form-field>\n            <mat-chip-list #chipList>\n              <mat-chip\n                *ngFor=\"let title of titleSelected\"\n                [removable]=\"true\"\n                (removed)=\"titleSelected = []\"\n              >\n                <span>{{ title }}</span>\n                <mat-icon matChipRemove>cancel</mat-icon>\n              </mat-chip>\n              <input\n                #autocompleteInput\n                type=\"text\"\n                placeholder=\"Enter title\"\n                matInput\n                formControlName=\"title\"\n                [matAutocomplete]=\"auto\"\n                [matChipInputFor]=\"chipList\"\n              />\n              <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option\n                  *ngFor=\"let option of newBookOptions\"\n                  [value]=\"option.volumeInfo.title\"\n                  (onSelectionChange)=\"setBook(option)\"\n                >\n                  {{ option.volumeInfo.title }} by\n                  {{ option.volumeInfo.authors }}\n                </mat-option>\n              </mat-autocomplete>\n            </mat-chip-list>\n          </mat-form-field>\n          <mat-card-content>\n            <mat-form-field>\n              <mat-label>Status</mat-label>\n              <mat-select name=\"addBookStatus\" formControlName=\"status\">\n                <mat-option value=\"Completed\">Completed</mat-option>\n                <mat-option value=\"Dropped\">Dropped</mat-option>\n                <mat-option value=\"On-hold\">On-hold</mat-option>\n                <mat-option value=\"Reading\">Reading</mat-option>\n                <mat-option value=\"Plan to read\">Plan to read</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field\n              *ngIf=\"\n                addBookFormGroup.get('status').value == 'Completed' ||\n                addBookFormGroup.get('status').value == 'Dropped'\n              \"\n            >\n              <mat-label>Rating</mat-label>\n              <mat-select name=\"addBookRating\" formControlName=\"rating\">\n                <mat-option\n                  *ngFor=\"let option of ratings\"\n                  [value]=\"option.value\"\n                  >{{ option.text }}</mat-option\n                >\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field\n              *ngIf=\"addBookFormGroup.get('status').value == 'Completed'\"\n            >\n              <mat-label>Review</mat-label>\n              <textarea\n                matInput\n                formControlName=\"review\"\n                name=\"addBookReview\"\n              ></textarea>\n            </mat-form-field>\n            <mat-form-field\n              *ngIf=\"\n                addBookFormGroup.get('status').value == 'Reading' ||\n                addBookFormGroup.get('status').value == 'On-hold'\n              \"\n            >\n              <input\n                matInput\n                name=\"currentPage\"\n                placeholder=\"Current Page\"\n                formControlName=\"currentPage\"\n              />\n            </mat-form-field>\n            <mat-form-field\n              style=\"width: 85%\"\n              appearance=\"fill\"\n              *ngIf=\"\n                !(\n                  addBookFormGroup.get('status').value == 'Plan to read' ||\n                  addBookFormGroup.get('status').value == null\n                )\n              \"\n            >\n              <mat-label>Start date</mat-label>\n              <input\n                matInput\n                [matDatepicker]=\"picker\"\n                formControlName=\"startDate\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n            <mat-form-field\n              style=\"width: 85%\"\n              appearance=\"fill\"\n              *ngIf=\"\n                !(\n                  addBookFormGroup.get('status').value == 'Plan to read' ||\n                  addBookFormGroup.get('status').value == 'Reading' ||\n                  addBookFormGroup.get('status').value == null\n                )\n              \"\n            >\n              <mat-label>End date</mat-label>\n              <input\n                matInput\n                [matDatepicker]=\"picker\"\n                formControlName=\"endDate\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n          </mat-card-content>\n          <button\n            mat-raised-button\n            class=\"btn-block\"\n            style=\"position: absolute; bottom: 10%; width: 90%\"\n            (click)=\"addBookFormGroup.reset()\"\n          >\n            Clear\n          </button>\n          <button\n            mat-raised-button\n            color=\"primary\"\n            class=\"btn-block\"\n            type=\"submit\"\n            style=\"position: absolute; bottom: 2%; width: 90%\"\n          >\n            Add entry!\n          </button>\n        </form>\n      </mat-card>\n    </div>\n  </mat-grid-tile>\n  <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n    <mat-card class=\"container\">\n      <mat-card-title>Stats</mat-card-title>\n      <mat-card-content>\n        <h3>Completed: {{ stats.completed }}</h3>\n        <h3>Dropped: {{ stats.dropped }}</h3>\n        <h3>On-hold: {{ stats.onHold }}</h3>\n        <h3>Reading: {{ stats.reading }}</h3>\n        <h3>Plan-to-read: {{ stats.planToRead }}</h3>\n        <h3>Pages read: {{ stats.pagesRead }}</h3>\n        <h3>Average rating: {{ stats.averageRating }}</h3>\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n","<h1 mat-dialog-title style=\"text-align: center\">\n  Update <span style=\"font-style: italic\">{{ updatedEntry.book.title }}</span>\n</h1>\n<div class=\"add-a-book-container\">\n  <form [formGroup]=\"updatedEntryFormGroup\">\n    <mat-form-field>\n      <mat-label>Status</mat-label>\n      <mat-select name=\"addBookStatus\" formControlName=\"status\">\n        <mat-option value=\"Completed\">Completed</mat-option>\n        <mat-option value=\"Dropped\">Dropped</mat-option>\n        <mat-option value=\"On-hold\">On-hold</mat-option>\n        <mat-option value=\"Reading\">Reading</mat-option>\n        <mat-option value=\"Plan to read\">Plan to read</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field\n      *ngIf=\"\n                updatedEntryFormGroup.get('status').value == 'Completed' ||\n                updatedEntryFormGroup.get('status').value == 'Dropped'\n              \"\n    >\n      <mat-label>Rating</mat-label>\n      <mat-select name=\"addBookRating\" formControlName=\"rating\">\n        <mat-option *ngFor=\"let option of ratings\" [value]=\"option.value\"\n          >{{ option.text }}</mat-option\n        >\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field\n      *ngIf=\"updatedEntryFormGroup.get('status').value == 'Completed'\"\n    >\n      <mat-label>Review</mat-label>\n      <textarea\n        matInput\n        formControlName=\"review\"\n        name=\"addBookReview\"\n      ></textarea>\n    </mat-form-field>\n    <mat-form-field\n      *ngIf=\"\n                updatedEntryFormGroup.get('status').value == 'Reading' ||\n                updatedEntryFormGroup.get('status').value == 'On-hold'\n              \"\n    >\n      <input\n        matInput\n        name=\"currentPage\"\n        placeholder=\"Current Page\"\n        formControlName=\"currentPage\"\n      />\n    </mat-form-field>\n  </form>\n</div>\n<div>\n  <button\n    mat-raised-button\n    style=\"margin-right: 1vw; margin-left: 2.8vw\"\n    (click)=\"cancel()\"\n  >\n    Cancel\n  </button>\n  <button\n    mat-raised-button\n    color=\"primary\"\n    (click)=\"updateEntry()\"\n    cdkFocusInitial\n  >\n    Update\n  </button>\n</div>\n","<h1 mat-dialog-title style=\"text-align: center\">\n  Are you sure you want to delete this entry?\n</h1>\n<div style=\"margin-top: 10%\">\n  <button\n    mat-raised-button\n    style=\"margin-right: 1vw; margin-left: 2.8vw\"\n    (click)=\"cancel()\"\n  >\n    Cancel\n  </button>\n  <button\n    mat-stroked-button\n    color=\"warn\"\n    (click)=\"deleteEntry()\"\n    cdkFocusInitial\n  >\n    Delete\n  </button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Book, BookListEntry } from './booklist/book';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BooksService {\n  public booksData;\n\n  constructor(private http: HttpClient, private auth: AuthenticationService) {}\n\n  public searchBookByTitle(title: string): Observable<any> {\n    return this.http.get<any>('/api/books', {\n      params: {\n        title: title,\n      },\n    });\n  }\n\n  public addToUserBooklist(booklistEntry: BookListEntry) {\n    return this.http.post<any>(\n      '/api/users/add-to-booklist',\n      {\n        status: booklistEntry.status,\n        notes: booklistEntry.notes,\n        currentPageCount: booklistEntry.currentPageCount,\n        rating: booklistEntry.rating,\n        review: booklistEntry.review,\n        startDate: booklistEntry.startDate,\n        endDate: booklistEntry.endDate,\n      },\n      {\n        params: {\n          volumeId: booklistEntry.volumeId,\n        },\n        headers: { Authorization: `Bearer ${this.auth.getToken()}` },\n      }\n    );\n  }\n\n  public updateBooklistEntry(booklistEntry: BookListEntry) {\n    return this.http.put('/api/users/update-booklist-entry', booklistEntry, {\n      params: {\n        volumeId: booklistEntry.volumeId,\n      },\n      headers: { Authorization: `Bearer ${this.auth.getToken()}` },\n    });\n  }\n\n  public removeFromUserBooklist(volumeId: string) {\n    return this.http.delete('api/users/remove-from-booklist', {\n      params: {\n        volumeId: volumeId,\n      },\n      headers: { Authorization: `Bearer ${this.auth.getToken()}` },\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, UserDetails } from '../authentication.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  user: UserDetails;\n\n  constructor(private auth: AuthenticationService) {}\n\n  ngOnInit(): void {\n    this.getUserDetails();\n  }\n\n  getUserDetails = () => {\n    this.auth.profile().subscribe(\n      (user) => {\n        this.user = user;\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  };\n}\n","<mat-grid-list cols=\"3\" rowHeight=\"45%\">\n  <mat-grid-tile colspan=\"2\" rowspan=\"2\">\n    <div *ngIf=\"user\" style=\"position: absolute; left: 2%; top: 5%\">\n      <h1 style=\"padding-top: 1vh\">Welcome back, {{ user.name }}!</h1>\n      <h3 style=\"padding-top: 1vh\">\n        Are you still reading\n        <span style=\"font-style: italic\">The Power of Habit?</span>\n      </h3>\n      <button mat-raised-button color=\"primary\" style=\"padding-top: 1vh\">\n        You can update its entry here\n      </button>\n    </div>\n  </mat-grid-tile>\n  <mat-grid-tile colspan=\"1\" rowspan=\"1\">\n    <mat-card style=\"height: 90%; width: 80%\">\n      <h2>Stats</h2>\n      <mat-card-content>\n        <p>Completed: 12 books / 4200 pages</p>\n        <p>Favorite Genre: <span style=\"font-style: bold\">Psychology</span></p>\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n  <mat-grid-tile colspan=\"1\" rowspan=\"1\">\n    <mat-card style=\"height: 90%; width: 80%\">\n      <h2>Friend Activity</h2>\n      <mat-card-content>\n        <p>\n          John Doe is currently reading:\n          <span style=\"font-style: italic\"\n            >How to Win Friends and Influence People</span\n          >\n          ...\n        </p>\n        <p>\n          Bryan Horne is currently reading:\n          <span style=\"font-style: italic\">The Slight Edge</span>\n          by Jeff Olsen\n        </p>\n        <p>\n          Sally Johnson just finished:\n          <span style=\"font-style: italic\">The Art of War</span>\n          by Sun Tzu\n        </p>\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n</mat-grid-list>\n","import { Component } from '@angular/core';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  credentials: TokenPayload = {\n    email: '',\n    password: '',\n  };\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  login() {\n    this.auth.login(this.credentials).subscribe(\n      () => {\n        this.router.navigateByUrl('/profile');\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n}\n","<div class=\"form-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <mat-card class=\"box\">\n    <mat-card-header>\n      <mat-card-title>Log in</mat-card-title>\n    </mat-card-header>\n\n    <form class=\"auth-form\" (submit)=\"login()\">\n      <mat-card-content>\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            type=\"email\"\n            class=\"\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n            [(ngModel)]=\"credentials.email\"\n            placeholder=\"Email\"\n          />\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            type=\"password\"\n            class=\"\"\n            name=\"password\"\n            placeholder=\"Password\"\n            [(ngModel)]=\"credentials.password\"\n            placeholder=\"Password\"\n          />\n        </mat-form-field>\n      </mat-card-content>\n      <button mat-stroked-button color=\"accent\" class=\"btn-block\" type=\"submit\">\n        Log in\n      </button>\n    </form>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, UserDetails } from '../authentication.service';\n\n@Component({\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  details: UserDetails;\n\n  constructor(private auth: AuthenticationService) {}\n\n  ngOnInit() {\n    this.auth.profile().subscribe(\n      (user) => {\n        this.details = user;\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n}\n","<div class=\"form-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <mat-card class=\"box\">\n    <mat-card-header>\n      <mat-card-title>Your Profile</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <br />\n      <mat-action-row>\n        <h3>Full name</h3>\n        <p>{{ details?.name }}</p>\n      </mat-action-row>\n      <br />\n      <mat-action-row>\n        <h3>Email</h3>\n        <p>{{ details?.email }}</p>\n      </mat-action-row>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, TokenPayload } from '../authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  credentials: TokenPayload = {\n    email: '',\n    name: '',\n    password: '',\n  };\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  ngOnInit() {}\n\n  register() {\n    this.auth.register(this.credentials).subscribe(\n      () => {\n        this.router.navigateByUrl('/profile');\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n}\n","<div class=\"form-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <mat-card class=\"box\">\n    <mat-card-header>\n      <mat-card-title>Register</mat-card-title>\n    </mat-card-header>\n\n    <form class=\"auth-form\" (submit)=\"register()\">\n      <mat-card-content>\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            type=\"text\"\n            class=\"\"\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            [(ngModel)]=\"credentials.name\"\n            placeholder=\"Full name\"\n          />\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            type=\"email\"\n            class=\"\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n            [(ngModel)]=\"credentials.email\"\n            placeholder=\"Email\"\n          />\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <input\n            matInput\n            type=\"password\"\n            class=\"\"\n            name=\"password\"\n            placeholder=\"Password\"\n            [(ngModel)]=\"credentials.password\"\n            placeholder=\"Password\"\n          />\n        </mat-form-field>\n      </mat-card-content>\n\n      <button mat-stroked-button color=\"accent\" class=\"btn-block\">\n        Register\n      </button>\n    </form>\n  </mat-card>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}